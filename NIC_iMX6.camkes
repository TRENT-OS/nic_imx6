/*
 * Copyright (C) 2020-2021, HENSOLDT Cyber GmbH
 * SPDX-License-Identifier: BSD-3-Clause
 */

#pragma once

import <std_connector.camkes>;

import <if_OS_Nic.camkes>;
import <if_OS_Logger.camkes>;

// platforms may have specific imports and components
#include "plat_nic_imx6.camkes"
HARDWARE_ETHERNET_EXTRA_IMPORTS
HARDWARE_ETHERNET_COMPONENT


/*
 * Connect a network stack to the NIC:
 *
 *      NIC_IMX6_INSTANCE_CONNECT_CLIENT(
 *          <instance_nic>,
 *          <instance_stack>
 *      )
 */
#define NIC_IMX6_INSTANCE_CONNECT_CLIENT(_nic_, _stack_) \
    \
    connection seL4Ethdriver conn_ ## _nic_ ## _ ## _stack_ ## _eth( \
        from _stack_.nic_driver, \
        to   _nic_.client); \
    \
    connection seL4SharedData  conn_ ## _nic_ ## _ ## _stack_ ## _port_rx( \
        from _nic_.nic_port_to, \
        to   _stack_.nic_port_from); \
    \
    connection seL4SharedData conn_ ## _nic_ ## _ ## _stack_ ## _port_tx( \
        from _nic_.nic_port_from, \
        to   _stack_.nic_port_to); \
    \
    connection seL4NotificationNative conn_ ## _nic_ ## _ ## _stack_## _event( \
        from _nic_.nic_event_hasData,\
        to   _stack_.event_tick_or_data);


/*
 * Assign the optional logger:
 *
 *      NIC_IMX6_INSTANCE_CONNECT_OPTIONAL_LOGGER(
 *          <instance>,
 *          <logger>.<rpc>, <logger>.<port_to>
 *      )
 */
#define NIC_IMX6_INSTANCE_CONNECT_OPTIONAL_LOGGER(_nic_, _logserver_) \
    \
    connection seL4RPCCall conn_ ## _nic_ ## _ ## _logserver_ ## _rpc( \
        from _nic_.logServer_rpc, \
        to   _logserver_.logServer_rpc); \
    \
    connection seL4SharedData  conn_ ## _nic_ ## _ ## _logserver_ ## _port( \
        from  _nic_.logServer_dp, \
        to    _logserver_.nwDriver_dp);


//------------------------------------------------------------------------------
// Internal driver configuration, no system should ever have the need to modify
// this - unless it changes the DMA settings.
//
// DMA Memory requirements:
//   RX Buffers          524288 bytes (256 * 2048)
//   TX Buffers          262144 bytes (128 * 2048)
//   RX Descriptor Ring    1024 bytes (allocation might take a whole page)
//   TX Descriptor Ring    1024 bytes (allocation might take a whole page)
//   ---------------------------------------------------------------------
//   Total               788480 bytes (= 0xC0800)
//
#define NIC_IMX6_MEMORY_CONFIG(_nic_) \
    _nic_.simple = true;             \
    _nic_.cnode_size_bits = 12;      \
    _nic_.simple_untyped20_pool = 2; \
    _nic_.heap_size = 0x10000;       \
    _nic_.dma_pool = 0xC2000; /* align up to a multiple of pages */


component NIC_IMX6 {

    // We can't use the single_threaded_component() macro here, because there
    // is a global components include quirk in BenchUtilz. It includes the
    // global components TimeServer, which conflicts with our TimeServer
    // implementation, that uses the same component name. Thus, we put the
    // macro contents here.
    control;
    attribute int single_threaded = 1;
    maybe consumes Trace trace_start;
    maybe consumes Trace trace_stop;
    // end of things from single_threaded_component()

    provides if_OS_Nic client;

    dataport         Buf(NIC_DRIVER_RINGBUFFER_SIZE) nic_port_to; /* driver -> network stack */
    dataport         Buf                             nic_port_from; /* network stack -> driver */

    emits EventDataAvailable nic_event_hasData;

    // optional connection to the LogServer
    maybe uses      if_OS_Logger            logServer_rpc;
    maybe dataport  Buf                     logServer_dp;
    maybe consumes  EventReady              logServer_event_ready;

    HARDWARE_ETHERNET_ATTRIBUTES

    HARDWARE_ETHERNET_INTERFACES

    composition {
        HARDWARE_ETHERNET_COMPOSITION
    }

    configuration {
        HARDWARE_ETHERNET_CONFIG
    }
};
